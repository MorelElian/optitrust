name: OptiTrust CI

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install LLVM/Clang 15
        run: |
          sudo apt-get update
          sudo apt-get install -y wget gnupg lsb-release
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh 15
          sudo apt-get install -y clang-15 llvm-15 llvm-15-dev libclang-15-dev
          sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-15 150 \
            --slave /usr/bin/clang++ clang++ /usr/bin/clang++-15
          clang --version
          llvm-config-15 --version

      - name: Set up OCaml (4.14.1 + flambda)
        uses: ocaml/setup-ocaml@v3
        with:
          ocaml-compiler: ocaml-variants.4.14.1+options
          opam-depext: true

      - name: Cache opam
        uses: actions/cache@v4
        with:
          path: ~/.opam
          key: ${{ runner.os }}-ocaml-4.14.1-flambda-${{ hashFiles('*.opam') }}
          restore-keys: |
            ${{ runner.os }}-ocaml-4.14.1-flambda-

      - name: Init opam environment
        run: |
          opam init -y --bare --disable-sandboxing
          eval $(opam env)

      - name: Create and use switch
        run: |
          opam switch create 4.14.1+options \
            --packages=ocaml-variants.4.14.1+options,ocaml-option-flambda -y
          eval $(opam env)

      - name: Pin required packages (exact versions)
        run: |
          opam pin add dune 3.18.2 -y
          opam pin add menhirLib 20210419 -y
          opam pin add pprint 20220103 -y
          opam pin add clangml 4.8.0 -y --yes || true
          eval $(opam env)

      - name: Install main dependencies
        run: |
          opam install -y dune refl clangml pprint menhir menhirLib base64 ocamlbuild ppx_deriving dream lambdasoup graphics
          eval $(opam env)

      - name: Precompile headers
        run: |
          make precompile

      - name: Build project
        run: |
          opam exec -- dune build

      - name: Check installation
        run: |
          ./tester run tile

      - name: Run tests
        run: |
          make tests
