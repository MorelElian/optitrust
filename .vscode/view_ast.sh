# This script produces foo_ast.html, it copies over view_ast.css and view_ast.js.
# The file foo_ast.html is a copy of view_ast_template.html, where a pointer to foo_ast.js is set,
# and where the contents of foo.cpp is included.
# The file foo_ast.js should be generated by OptiTrust, with structured description of the AST.


DIRNAME=$1
FILEBASE=$2

# SELECT BROWSER
if [ -z "${BROWSER}" ]; then
  BROWSER="chromium-browser"
fi


# Relative path to vscode -- TODO: make more general
VSCODE_FOLDER=../.vscode

# Computer tools folder
TOOLS_FOLDER=../tools

# Target file to be produced
TARGET=${FILEBASE}_ast.html

# File that the target file should include
TOLOAD=${FILEBASE}_ast.js

TITLESTR="OptiTrust_AST_${FILEBASE}" # TODO: investigate how to make spaces and slash be properly escaped

# Compute the base64 encoding of foo.cpp
CODEVAL=`echo ${FILEBASE}.cpp | base64 -w 0`
CODESTR="var codeString = window.atob(\"${CODEVAL}\");"

# Generate the ${TARGET} file from the template, by substitution
TEMPLATE="${TOOLS_FOLDER}/view_ast_template.html"
cp ${TEMPLATE} ${TARGET}
sed -i "s#{INSERT_TITLE}#${TITLESTR}#g;s#{TOOLS_FOLDER}#${TOOLS_FOLDER}#g;s#{INSERT_TOLOAD}#${TOLOAD}#g;s#{INSERT_CODE}#${CODESTR}#g" ${TARGET}

# Open the browser
${VSCODE_FOLDER}/open_in_browser ${TARGET} "${TITLESTR}"

